install pygrib (http://www.cloud-rocket.com/2016/01/installing-pygrib-on-ubuntu-14-04/)
1. install anaconda set env
(conda config --add channels conda-forge )
2. install pyproj: conda install -c conda-forge pyproj (or pip) 
3. install basemap: conda install -c anaconda basemap 
4. install jasper (sudo apt-get install libjasper-dev)
5. install libpng (sudo apt-get install libpng-dev)
6. install grib-api
	a. wget https://confluence.ecmwf.int/download/attachments/3473437/grib_api-1.26.0-Source.tar.gz?api=v2
	b. gunzip grib_api-X.X.X.tar.gz
	c. tar xf grib_api-X.X.X.tar
	d. mkdir ~/grib_api_dir
	e. cd grib_api-X.X.X
	f. ./configure --prefix=/home/your_user_name/grib_api_dir 
	g. make
	h. make check (skip, too slow)
	j. make install
7. install pygrib: conda install -c conda-forge pygrib 

install R
install tensorflow 1.6
install ffmepg
install Rstudio
install chromium
install sublime3
install vim

conda lib:
shapely; fiona ("conda install" include gdals, proj4, basemap); pyproj; conda install -c anaconda psycopg2 


install postgres
(https://www.digitalocean.com/community/tutorials/how-to-install-and-use-postgresql-on-ubuntu-16-04)
sudo apt-get update
sudo apt-get install postgresql postgresql-contrib

how to start:
sudo -u -i postgres
psql postgres
alter user postgres with password 'XXXXXXXXXX';


install postgis
(https://www.gis-blog.com/how-to-install-postgis-2-3-on-ubuntu-16-04-lts/)
sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable
sudo apt update
sudo apt install postgis postgresql-9.5-postgis-2.3

install pgadmin3
sudo apt-get install pgadmin3


How to use postgis to process GRIB:
http://www.cef-cfr.ca/uploads/Membres/PierreRacine_FOSS4G_2011.pdf
how to insert grib to database

raster2pgsql -s 9802 -c -I -F -n fname ../DATA/filtered_weather_data/namanl/namanl_218_20130806_1800_006.grb grib_test |  psql template_postgis 
raster2pgsql -s 9802 -a -I -F -n PATH/TO/GRIB/*.grb TABLE_NAME | psql DATABASE_NAME

Doc for postgis raster processing
https://postgis.net/docs/using_raster_dataman.html
http://www.perry.cz/clanky/postgis.html


SELECT 
rid AS rid_val,
ST_Value(rast, 2, (ST_Transform(st_GeomFromText('POINT(-93.3 25.3)', 4326), 9802))) AS value,
ST_NearestValue(rast, 2, (ST_Transform(st_GeomFromText('POINT(-93.3 25.3)', 4326), 9802))) as nearest_val
FROM grib_test
WHERE
rid = 2
;

gdalstsinfo GRIBFILE
OGC WKT :
PROJCS["unnamed",
    GEOGCS["Coordinate System imported from GRIB file",
        DATUM["unknown",
            SPHEROID["Sphere",6371200,0]],
        PRIMEM["Greenwich",0],
        UNIT["degree",0.0174532925199433]],
    PROJECTION["Lambert_Conformal_Conic_2SP"],
    PARAMETER["standard_parallel_1",25],
    PARAMETER["standard_parallel_2",25],
    PARAMETER["latitude_of_origin",25],
    PARAMETER["central_meridian",-95],
    PARAMETER["false_easting",0],
    PARAMETER["false_northing",0]]

SELECT pg_size_pretty(pg_database_size('template_postgis'));


INSERT into spatial_ref_sys (srid, auth_name, auth_srid, proj4text, srtext) values ( 9802, 'sr-org', 9802, '+proj=lcc +lat_1=25 +lat_2=25 +lat_0=25 +lon_0=-95 +x_0=0 +y_0=0 +a=6371200 +b=6371200 +units=m +no_defs ', 'PROJCS["unnamed",
    GEOGCS["Coordinate System imported from GRIB file",
        DATUM["unknown",
            SPHEROID["Sphere",6371200,0]],
        PRIMEM["Greenwich",0],
        UNIT["degree",0.0174532925199433]],
    PROJECTION["Lambert_Conformal_Conic_2SP"],
    PARAMETER["standard_parallel_1",25],
    PARAMETER["standard_parallel_2",25],
    PARAMETER["latitude_of_origin",25],
    PARAMETER["central_meridian",-95],
    PARAMETER["false_easting",0],
    PARAMETER["false_northing",0]]');






